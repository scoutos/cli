/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "./environments";
import * as core from "./core";
import { Workflows } from "./api/resources/workflows/client/Client";
import { Environments } from "./api/resources/environments/client/Client";
import { Revisions } from "./api/resources/revisions/client/Client";
import { Usage } from "./api/resources/usage/client/Client";
import { WorkflowLogs } from "./api/resources/workflowLogs/client/Client";
import { Copilots } from "./api/resources/copilots/client/Client";
import { Collections } from "./api/resources/collections/client/Client";
import { Tables } from "./api/resources/tables/client/Client";
import { Documents } from "./api/resources/documents/client/Client";
export declare namespace ScoutClient {
    interface Options {
        environment?: core.Supplier<environments.ScoutEnvironment | string>;
        apiKey?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}
export declare class ScoutClient {
    protected readonly _options: ScoutClient.Options;
    constructor(_options?: ScoutClient.Options);
    protected _workflows: Workflows | undefined;
    get workflows(): Workflows;
    protected _environments: Environments | undefined;
    get environments(): Environments;
    protected _revisions: Revisions | undefined;
    get revisions(): Revisions;
    protected _usage: Usage | undefined;
    get usage(): Usage;
    protected _workflowLogs: WorkflowLogs | undefined;
    get workflowLogs(): WorkflowLogs;
    protected _copilots: Copilots | undefined;
    get copilots(): Copilots;
    protected _collections: Collections | undefined;
    get collections(): Collections;
    protected _tables: Tables | undefined;
    get tables(): Tables;
    protected _documents: Documents | undefined;
    get documents(): Documents;
}
