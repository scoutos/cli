name: Build Artifact

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Optionally trigger on release
#   release:
#     types: [created]

jobs:
  build:
    name: Build CLI Artifact
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: read

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output: scout-cli-linux
          - os: windows-latest
            output: scout-cli-windows.exe
          - os: macos-latest
            output: scout-cli-macos

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Create temp directory
        run: |
          mkdir -p ./temp
          chmod 777 ./temp

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
            ./temp
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deps.ts', '**/mod.ts') }}

      - name: Install npm dependencies
        run: |
          deno cache --reload npm:abort-controller@3.0.0
          deno cache --reload npm:scoutos@0.7.1
        env:
          DENO_DIR: ./temp/deno-dir

      - name: Download dependencies
        run: deno cache mod.ts
        env:
          DENO_DIR: ./temp/deno-dir

      - name: Compile CLI
        run: deno compile --allow-read --allow-write --allow-env --allow-net --allow-run --output ${{ matrix.output }} mod.ts
        env:
          DENO_DIR: ./temp/deno-dir # Use a directory in the workspace
          TMPDIR: ./temp

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}
